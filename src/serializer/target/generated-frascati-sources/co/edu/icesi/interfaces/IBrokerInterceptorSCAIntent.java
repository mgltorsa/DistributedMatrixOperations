/*
 * Generated by: org.ow2.frascati.tinfi.opt.oo.InterceptorClassGenerator
 * on: Mon Jun 03 20:26:22 COT 2019
 */

package co.edu.icesi.interfaces;


public class IBrokerInterceptorSCAIntent
extends org.ow2.frascati.tinfi.TinfiComponentInterceptor<co.edu.icesi.interfaces.IBroker>
implements co.edu.icesi.interfaces.IBroker,org.objectweb.fractal.julia.Interceptor {

  private static java.lang.reflect.Method[] METHODS;
  public IBrokerInterceptorSCAIntent()  {
  }

  private IBrokerInterceptorSCAIntent(Object obj)  {
    setFcItfDelegate(obj);
  }

  public void initFcController(org.objectweb.fractal.julia.InitializationContext ic) throws org.objectweb.fractal.api.factory.InstantiationException  {
    super.initFcController(ic);
    initIntentHandlersMap(METHODS);
  }

  public Object clone()  {
    IBrokerInterceptorSCAIntent clone = new IBrokerInterceptorSCAIntent(getFcItfDelegate());
    initFcClone(clone);
    clone.initIntentHandlersMap(METHODS);
    return clone;
  }

  public java.lang.String[] getTiffProcessors(final int arg0) throws java.lang.IllegalArgumentException  {
    java.util.List<org.ow2.frascati.tinfi.api.IntentHandler> handlers = intentHandlersMap.get(METHODS[1]);
    try {
      if( handlers.size() == 0 ) {
        java.lang.String[] ret = impl.getTiffProcessors(arg0);
        return ret;
      }
      else {
        org.objectweb.fractal.api.Component comp = getFcComponent();
        org.objectweb.fractal.api.Interface itf = getFcItf();
        org.ow2.frascati.tinfi.IntentJoinPointImpl<co.edu.icesi.interfaces.IBroker> ijp = new org.ow2.frascati.tinfi.IntentJoinPointImpl();
        ijp.init(handlers,comp,itf,impl,METHODS[1],(Object)arg0);
    java.lang.String[] ret = (java.lang.String[]) ijp.proceed();
    return ret;
      }
    }
    catch( Throwable t ) {
      if( t instanceof java.lang.IllegalArgumentException ) {
        throw (java.lang.IllegalArgumentException) t;
      }
      if( t instanceof RuntimeException ) {
        throw (RuntimeException) t;
      }
      throw new org.ow2.frascati.tinfi.TinfiRuntimeException(t);
    }
  }

  public void register(final java.lang.String arg0,final int arg1,final java.lang.String arg2) throws java.lang.IllegalArgumentException  {
    java.util.List<org.ow2.frascati.tinfi.api.IntentHandler> handlers = intentHandlersMap.get(METHODS[0]);
    try {
      if( handlers.size() == 0 ) {
        impl.register(arg0,arg1,arg2);
      }
      else {
        org.objectweb.fractal.api.Component comp = getFcComponent();
        org.objectweb.fractal.api.Interface itf = getFcItf();
        org.ow2.frascati.tinfi.IntentJoinPointImpl<co.edu.icesi.interfaces.IBroker> ijp = new org.ow2.frascati.tinfi.IntentJoinPointImpl();
        ijp.init(handlers,comp,itf,impl,METHODS[0],(Object)arg0,(Object)arg1,(Object)arg2);
    ijp.proceed();
    Object ret = null;
      }
    }
    catch( Throwable t ) {
      if( t instanceof java.lang.IllegalArgumentException ) {
        throw (java.lang.IllegalArgumentException) t;
      }
      if( t instanceof RuntimeException ) {
        throw (RuntimeException) t;
      }
      throw new org.ow2.frascati.tinfi.TinfiRuntimeException(t);
    }
  }

  public java.lang.String[] getImageSerializers() throws java.lang.IllegalArgumentException  {
    java.util.List<org.ow2.frascati.tinfi.api.IntentHandler> handlers = intentHandlersMap.get(METHODS[3]);
    try {
      if( handlers.size() == 0 ) {
        java.lang.String[] ret = impl.getImageSerializers();
        return ret;
      }
      else {
        org.objectweb.fractal.api.Component comp = getFcComponent();
        org.objectweb.fractal.api.Interface itf = getFcItf();
        org.ow2.frascati.tinfi.IntentJoinPointImpl<co.edu.icesi.interfaces.IBroker> ijp = new org.ow2.frascati.tinfi.IntentJoinPointImpl();
        ijp.init(handlers,comp,itf,impl,METHODS[3]);
    java.lang.String[] ret = (java.lang.String[]) ijp.proceed();
    return ret;
      }
    }
    catch( Throwable t ) {
      if( t instanceof java.lang.IllegalArgumentException ) {
        throw (java.lang.IllegalArgumentException) t;
      }
      if( t instanceof RuntimeException ) {
        throw (RuntimeException) t;
      }
      throw new org.ow2.frascati.tinfi.TinfiRuntimeException(t);
    }
  }

  public int getTotalProcessors()  {
    java.util.List<org.ow2.frascati.tinfi.api.IntentHandler> handlers = intentHandlersMap.get(METHODS[2]);
    try {
      if( handlers.size() == 0 ) {
        int ret = impl.getTotalProcessors();
        return ret;
      }
      else {
        org.objectweb.fractal.api.Component comp = getFcComponent();
        org.objectweb.fractal.api.Interface itf = getFcItf();
        org.ow2.frascati.tinfi.IntentJoinPointImpl<co.edu.icesi.interfaces.IBroker> ijp = new org.ow2.frascati.tinfi.IntentJoinPointImpl();
        ijp.init(handlers,comp,itf,impl,METHODS[2]);
    Object proceed = ijp.proceed();
    int ret = (proceed==null) ? 0 : (java.lang.Integer)proceed;
    return ret;
      }
    }
    catch( Throwable t ) {
      if( t instanceof RuntimeException ) {
        throw (RuntimeException) t;
      }
      throw new org.ow2.frascati.tinfi.TinfiRuntimeException(t);
    }
  }

  static  {
    try {
      METHODS = new java.lang.reflect.Method[]{
        co.edu.icesi.interfaces.IBroker.class.getMethod("register",java.lang.String.class,int.class,java.lang.String.class),
        co.edu.icesi.interfaces.IBroker.class.getMethod("getTiffProcessors",int.class),
        co.edu.icesi.interfaces.IBroker.class.getMethod("getTotalProcessors"),
        co.edu.icesi.interfaces.IBroker.class.getMethod("getImageSerializers"),
      };
    }
    catch( NoSuchMethodException e ) {
      throw new org.ow2.frascati.tinfi.TinfiRuntimeException(e);
    }
  }

}
