/*
 * Generated by: org.ow2.frascati.tinfi.opt.oo.ServerInterfaceClassGenerator
 * on: Mon Jun 03 20:26:22 COT 2019
 */

package co.edu.icesi.interfaces;


public class ISerializerFcInItf
extends org.ow2.frascati.tinfi.TinfiComponentInterface<co.edu.icesi.interfaces.ISerializer>
implements co.edu.icesi.interfaces.ISerializer {

  public ISerializerFcInItf()  {
  }

  public ISerializerFcInItf(org.objectweb.fractal.api.Component component,String s,org.objectweb.fractal.api.Type type,boolean flag,Object obj)  {
    super(component,s,type,flag,obj);
  }

  public void setSourcePath(final java.lang.String arg0) throws java.rmi.RemoteException  {
    if ( impl == null )
    {
      throw new java.lang.NullPointerException("Trying to invoke a method on a client or server interface whose complementary interface is not bound.");
    }
    impl.setSourcePath(arg0);
  }

  public void drawImage(final int arg0,final int arg1,final int arg2,final int arg3,final int[][] arg4) throws java.rmi.RemoteException  {
    if ( impl == null )
    {
      throw new java.lang.NullPointerException("Trying to invoke a method on a client or server interface whose complementary interface is not bound.");
    }
    impl.drawImage(arg0,arg1,arg2,arg3,arg4);
  }

  public void setDestPath(final java.lang.String arg0) throws java.rmi.RemoteException  {
    if ( impl == null )
    {
      throw new java.lang.NullPointerException("Trying to invoke a method on a client or server interface whose complementary interface is not bound.");
    }
    impl.setDestPath(arg0);
  }

  public boolean isLocked() throws java.rmi.RemoteException  {
    if ( impl == null )
    {
      throw new java.lang.NullPointerException("Trying to invoke a method on a client or server interface whose complementary interface is not bound.");
    }
    boolean ret = impl.isLocked();
    return ret;
  }

  public void setWorkers(final int arg0) throws java.rmi.RemoteException  {
    if ( impl == null )
    {
      throw new java.lang.NullPointerException("Trying to invoke a method on a client or server interface whose complementary interface is not bound.");
    }
    impl.setWorkers(arg0);
  }

}
